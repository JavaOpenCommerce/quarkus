plugins {
    id 'java'
    id 'idea'
    id 'io.quarkus' version '1.7.0.Final'
    id 'io.freefair.lombok' //version '5.1.0'
    id 'org.asciidoctor.jvm.convert' //version '3.1.0'
}
apply plugin: 'idea'

dependencies {
    implementation project(':model')
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    // Web sockets is for remote debugging. Requires quarkus.live-reload.password & quarkus.live-reload.url properties
    // ./gradlew quarkusRemoteDev -Dquarkus.live-reload.url=http://my-remote-host:8080
    implementation 'io.quarkus:quarkus-undertow-websockets'
    implementation 'io.quarkus:quarkus-elytron-security-oauth2'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-reactive-pg-client'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-vertx'
    implementation 'io.quarkus:quarkus-vertx-web'
    implementation 'io.quarkus:quarkus-flyway'
    implementation 'io.quarkus:quarkus-redis-client'
    implementation 'io.smallrye.reactive:smallrye-mutiny-vertx-redis-client'
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-resteasy-mutiny'
    implementation 'io.smallrye.reactive:smallrye-mutiny-vertx-web-client'
    implementation 'org.elasticsearch:elasticsearch:7.8.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    // Testing deps:
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

group 'com.example.jcc.quarkus'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

asciidoctor {
    sourceDir file("src/main/docs")

    baseDirFollowsSourceFile()

    resources {
        from("${sourceDir}/images") {
            include '**'
            into 'images'
        }
    }
    outputDir file("build/docs")
    attributes 'build-gradle': file('build.gradle'),
            'endpoint-url': 'http://example.org',
            'source-highlighter': 'coderay',
            'coderay-css': 'style',
            'imagesdir': './images',
            'toc': 'left',
            'icons': 'font',
            'setanchors': '',
            'idprefix': 'slide-',
            'idseparator': '-',
            'docinfo': 'shared'
}
